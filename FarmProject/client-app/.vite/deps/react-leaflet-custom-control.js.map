{
  "version": 3,
  "sources": ["../../node_modules/react-leaflet-custom-control/src/Control.tsx"],
  "sourcesContent": ["import L from 'leaflet'\nimport React from 'react'\nimport { useMap } from 'react-leaflet'\n\ninterface Props {\n  position: L.ControlPosition\n  children?: React.ReactNode\n  container?: React.HTMLAttributes<HTMLDivElement>\n  prepend?: boolean\n}\n\nconst POSITION_CLASSES = {\n  bottomleft: 'leaflet-bottom leaflet-left',\n  bottomright: 'leaflet-bottom leaflet-right',\n  topleft: 'leaflet-top leaflet-left',\n  topright: 'leaflet-top leaflet-right',\n}\n\nconst Control = (props: Props): JSX.Element => {\n  const [portalRoot, setPortalRoot] = React.useState<any>(document.createElement('div'))\n  const positionClass = ((props.position && POSITION_CLASSES[props.position]) || POSITION_CLASSES.topright)\n  const controlContainerRef = React.createRef<HTMLDivElement>()\n  const map = useMap()\n\n  /**\n   * Whenever the control container ref is created, \n   * Ensure the click / scroll propagation is removed\n   * This way click/scroll events do not bubble down to the map\n   */\n  React.useEffect(() => {\n    if (controlContainerRef.current !== null) {\n      L.DomEvent.disableClickPropagation(controlContainerRef.current)\n      L.DomEvent.disableScrollPropagation(controlContainerRef.current)\n    }\n  }, [controlContainerRef])\n\n  /**\n   * Whenever the position is changed, go ahead and get the container of the map and the first\n   * instance of the position class in that map container\n   * Fixes #17\n   */\n  React.useEffect(() => {\n    const mapContainer = map.getContainer()\n    const targetDiv = mapContainer.getElementsByClassName(positionClass)\n    setPortalRoot(targetDiv[0])\n  }, [positionClass])\n\n  /**\n   * Whenever the portal root is complete,\n   * append or prepend the control container to the portal root\n   */\n  React.useEffect(() => {\n    if (portalRoot !== null) {\n      if (props.prepend !== undefined && props.prepend === true) {\n        portalRoot.prepend(controlContainerRef.current)\n      } else {\n        portalRoot.append(controlContainerRef.current)\n      }\n    }\n  }, [portalRoot, props.prepend, controlContainerRef])\n\n  /**\n   * Concatenate the props.container className to the class of the control div\n   */\n  const className = (props.container?.className?.concat(' ') || '') + 'leaflet-control'\n\n  /**\n   * Render\n   */\n  return (\n    <div\n      {...props.container}\n      ref={controlContainerRef}\n      className={className}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nexport default Control"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA,qBAAc;AACd,mBAAkB;;;;;;;;;;;;AAUlB,IAAM,mBAAmB;EACvB,YAAY;EACZ,aAAa;EACb,SAAS;EACT,UAAU;;AAGZ,IAAM,UAAU,SAAC,OAAY;;AACrB,MAAA,KAAA,aAAAA,QAAA,SAAA,SAAA,cAAA,KAAA,CAAA,GAAC,aAAA,GAAA,CAAA,GAAY,gBAAA,GAAA,CAAA;AACnB,MAAM,gBAAkB,MAAM,YAAY,iBAAiB,MAAM,QAAQ,KAAM,iBAAiB;AAChG,MAAM,sBAAsB,aAAAA,QAAM,UAAS;AAC3C,MAAM,MAAM,OAAM;AAElB,eAAAA,QAAM,UAAU,WAAA;AACd,QAAI,oBAAoB,YAAY,MAAM;AACxC,qBAAAC,QAAE,SAAS,wBAAwB,oBAAoB,OAAO;AAC9D,qBAAAA,QAAE,SAAS,yBAAyB,oBAAoB,OAAO;;EAEnE,GAAG,CAAC,mBAAmB,CAAC;AAExB,eAAAD,QAAM,UAAU,WAAA;AACd,QAAM,eAAe,IAAI,aAAY;AACrC,QAAM,YAAY,aAAa,uBAAuB,aAAa;AACnE,kBAAc,UAAU,CAAC,CAAC;EAC5B,GAAG,CAAC,aAAa,CAAC;AAElB,eAAAA,QAAM,UAAU,WAAA;AACd,QAAI,eAAe,MAAM;AACvB,UAAI,MAAM,YAAY,UAAa,MAAM,YAAY,MAAM;AACzD,mBAAW,QAAQ,oBAAoB,OAAO;aACzC;AACL,mBAAW,OAAO,oBAAoB,OAAO;;;EAGnD,GAAG,CAAC,YAAY,MAAM,SAAS,mBAAmB,CAAC;AAEnD,MAAM,eAAa,MAAA,KAAA,MAAM,eAAS,QAAA,OAAA,SAAA,SAAA,GAAE,eAAS,QAAA,OAAA,SAAA,SAAA,GAAE,OAAO,GAAG,MAAK,MAAM;AACpE,SACE,aAAAA,QAAA,cAAA,OAAA,SAAA,CAAA,GACM,MAAM,WAAS,EACnB,KAAK,qBACL,UAAoB,CAAA,GAEnB,MAAM,QAAQ;AAGrB;AAEA,IAAA,kBAAe;",
  "names": ["React", "L"]
}
